// Generated by gencpp from file bwi_virtour/Rotate.msg
// DO NOT EDIT!


#ifndef BWI_VIRTOUR_MESSAGE_ROTATE_H
#define BWI_VIRTOUR_MESSAGE_ROTATE_H

#include <ros/service_traits.h>


#include <bwi_virtour/RotateRequest.h>
#include <bwi_virtour/RotateResponse.h>


namespace bwi_virtour
{

struct Rotate
{

typedef RotateRequest Request;
typedef RotateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Rotate
} // namespace bwi_virtour


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::bwi_virtour::Rotate > {
  static const char* value()
  {
    return "1e87bb51aabe7eaee29da2957962f8ac";
  }

  static const char* value(const ::bwi_virtour::Rotate&) { return value(); }
};

template<>
struct DataType< ::bwi_virtour::Rotate > {
  static const char* value()
  {
    return "bwi_virtour/Rotate";
  }

  static const char* value(const ::bwi_virtour::Rotate&) { return value(); }
};


// service_traits::MD5Sum< ::bwi_virtour::RotateRequest> should match 
// service_traits::MD5Sum< ::bwi_virtour::Rotate > 
template<>
struct MD5Sum< ::bwi_virtour::RotateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::bwi_virtour::Rotate >::value();
  }
  static const char* value(const ::bwi_virtour::RotateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::bwi_virtour::RotateRequest> should match 
// service_traits::DataType< ::bwi_virtour::Rotate > 
template<>
struct DataType< ::bwi_virtour::RotateRequest>
{
  static const char* value()
  {
    return DataType< ::bwi_virtour::Rotate >::value();
  }
  static const char* value(const ::bwi_virtour::RotateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::bwi_virtour::RotateResponse> should match 
// service_traits::MD5Sum< ::bwi_virtour::Rotate > 
template<>
struct MD5Sum< ::bwi_virtour::RotateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::bwi_virtour::Rotate >::value();
  }
  static const char* value(const ::bwi_virtour::RotateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::bwi_virtour::RotateResponse> should match 
// service_traits::DataType< ::bwi_virtour::Rotate > 
template<>
struct DataType< ::bwi_virtour::RotateResponse>
{
  static const char* value()
  {
    return DataType< ::bwi_virtour::Rotate >::value();
  }
  static const char* value(const ::bwi_virtour::RotateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BWI_VIRTOUR_MESSAGE_ROTATE_H
