; Auto-generated. Do not edit!


(cl:in-package segway_msgs-msg)


;//! \htmlinclude Propulsion.msg.html

(cl:defclass <Propulsion> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (min_propulsion_battery_soc
    :reader min_propulsion_battery_soc
    :initarg :min_propulsion_battery_soc
    :type cl:float
    :initform 0.0)
   (mcu_battery_soc
    :reader mcu_battery_soc
    :initarg :mcu_battery_soc
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (mcu_battery_temp_degC
    :reader mcu_battery_temp_degC
    :initarg :mcu_battery_temp_degC
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (mcu_inst_power_W
    :reader mcu_inst_power_W
    :initarg :mcu_inst_power_W
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (mcu_total_energy_Wh
    :reader mcu_total_energy_Wh
    :initarg :mcu_total_energy_Wh
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (motor_current_A0pk
    :reader motor_current_A0pk
    :initarg :motor_current_A0pk
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (max_motor_current_A0pk
    :reader max_motor_current_A0pk
    :initarg :max_motor_current_A0pk
    :type cl:float
    :initform 0.0)
   (motor_current_limit_A0pk
    :reader motor_current_limit_A0pk
    :initarg :motor_current_limit_A0pk
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (min_motor_current_limit_A0pk
    :reader min_motor_current_limit_A0pk
    :initarg :min_motor_current_limit_A0pk
    :type cl:float
    :initform 0.0))
)

(cl:defclass Propulsion (<Propulsion>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <Propulsion>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'Propulsion)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name segway_msgs-msg:<Propulsion> is deprecated: use segway_msgs-msg:Propulsion instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:header-val is deprecated.  Use segway_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'min_propulsion_battery_soc-val :lambda-list '(m))
(cl:defmethod min_propulsion_battery_soc-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:min_propulsion_battery_soc-val is deprecated.  Use segway_msgs-msg:min_propulsion_battery_soc instead.")
  (min_propulsion_battery_soc m))

(cl:ensure-generic-function 'mcu_battery_soc-val :lambda-list '(m))
(cl:defmethod mcu_battery_soc-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:mcu_battery_soc-val is deprecated.  Use segway_msgs-msg:mcu_battery_soc instead.")
  (mcu_battery_soc m))

(cl:ensure-generic-function 'mcu_battery_temp_degC-val :lambda-list '(m))
(cl:defmethod mcu_battery_temp_degC-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:mcu_battery_temp_degC-val is deprecated.  Use segway_msgs-msg:mcu_battery_temp_degC instead.")
  (mcu_battery_temp_degC m))

(cl:ensure-generic-function 'mcu_inst_power_W-val :lambda-list '(m))
(cl:defmethod mcu_inst_power_W-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:mcu_inst_power_W-val is deprecated.  Use segway_msgs-msg:mcu_inst_power_W instead.")
  (mcu_inst_power_W m))

(cl:ensure-generic-function 'mcu_total_energy_Wh-val :lambda-list '(m))
(cl:defmethod mcu_total_energy_Wh-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:mcu_total_energy_Wh-val is deprecated.  Use segway_msgs-msg:mcu_total_energy_Wh instead.")
  (mcu_total_energy_Wh m))

(cl:ensure-generic-function 'motor_current_A0pk-val :lambda-list '(m))
(cl:defmethod motor_current_A0pk-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:motor_current_A0pk-val is deprecated.  Use segway_msgs-msg:motor_current_A0pk instead.")
  (motor_current_A0pk m))

(cl:ensure-generic-function 'max_motor_current_A0pk-val :lambda-list '(m))
(cl:defmethod max_motor_current_A0pk-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:max_motor_current_A0pk-val is deprecated.  Use segway_msgs-msg:max_motor_current_A0pk instead.")
  (max_motor_current_A0pk m))

(cl:ensure-generic-function 'motor_current_limit_A0pk-val :lambda-list '(m))
(cl:defmethod motor_current_limit_A0pk-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:motor_current_limit_A0pk-val is deprecated.  Use segway_msgs-msg:motor_current_limit_A0pk instead.")
  (motor_current_limit_A0pk m))

(cl:ensure-generic-function 'min_motor_current_limit_A0pk-val :lambda-list '(m))
(cl:defmethod min_motor_current_limit_A0pk-val ((m <Propulsion>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader segway_msgs-msg:min_motor_current_limit_A0pk-val is deprecated.  Use segway_msgs-msg:min_motor_current_limit_A0pk instead.")
  (min_motor_current_limit_A0pk m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <Propulsion>) ostream)
  "Serializes a message object of type '<Propulsion>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (cl:let ((bits (roslisp-utils:encode-single-float-bits (cl:slot-value msg 'min_propulsion_battery_soc))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'mcu_battery_soc))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'mcu_battery_soc))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'mcu_battery_temp_degC))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'mcu_battery_temp_degC))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'mcu_inst_power_W))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'mcu_inst_power_W))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'mcu_total_energy_Wh))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'mcu_total_energy_Wh))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'motor_current_A0pk))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'motor_current_A0pk))
  (cl:let ((bits (roslisp-utils:encode-single-float-bits (cl:slot-value msg 'max_motor_current_A0pk))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'motor_current_limit_A0pk))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'motor_current_limit_A0pk))
  (cl:let ((bits (roslisp-utils:encode-single-float-bits (cl:slot-value msg 'min_motor_current_limit_A0pk))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <Propulsion>) istream)
  "Deserializes a message object of type '<Propulsion>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'min_propulsion_battery_soc) (roslisp-utils:decode-single-float-bits bits)))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'mcu_battery_soc) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'mcu_battery_soc)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'mcu_battery_temp_degC) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'mcu_battery_temp_degC)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'mcu_inst_power_W) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'mcu_inst_power_W)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'mcu_total_energy_Wh) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'mcu_total_energy_Wh)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'motor_current_A0pk) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'motor_current_A0pk)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'max_motor_current_A0pk) (roslisp-utils:decode-single-float-bits bits)))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'motor_current_limit_A0pk) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'motor_current_limit_A0pk)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'min_motor_current_limit_A0pk) (roslisp-utils:decode-single-float-bits bits)))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<Propulsion>)))
  "Returns string type for a message object of type '<Propulsion>"
  "segway_msgs/Propulsion")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'Propulsion)))
  "Returns string type for a message object of type 'Propulsion"
  "segway_msgs/Propulsion")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<Propulsion>)))
  "Returns md5sum for a message object of type '<Propulsion>"
  "8db8f550407de4bfaf53927720c28e50")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'Propulsion)))
  "Returns md5sum for a message object of type 'Propulsion"
  "8db8f550407de4bfaf53927720c28e50")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<Propulsion>)))
  "Returns full string definition for message of type '<Propulsion>"
  (cl:format cl:nil "Header header~%float32 min_propulsion_battery_soc~%float32[] mcu_battery_soc~%float32[] mcu_battery_temp_degC~%float32[] mcu_inst_power_W~%float32[] mcu_total_energy_Wh~%float32[] motor_current_A0pk~%float32 max_motor_current_A0pk~%float32[] motor_current_limit_A0pk~%float32 min_motor_current_limit_A0pk~%~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'Propulsion)))
  "Returns full string definition for message of type 'Propulsion"
  (cl:format cl:nil "Header header~%float32 min_propulsion_battery_soc~%float32[] mcu_battery_soc~%float32[] mcu_battery_temp_degC~%float32[] mcu_inst_power_W~%float32[] mcu_total_energy_Wh~%float32[] motor_current_A0pk~%float32 max_motor_current_A0pk~%float32[] motor_current_limit_A0pk~%float32 min_motor_current_limit_A0pk~%~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <Propulsion>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     4
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'mcu_battery_soc) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'mcu_battery_temp_degC) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'mcu_inst_power_W) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'mcu_total_energy_Wh) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'motor_current_A0pk) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'motor_current_limit_A0pk) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <Propulsion>))
  "Converts a ROS message object to a list"
  (cl:list 'Propulsion
    (cl:cons ':header (header msg))
    (cl:cons ':min_propulsion_battery_soc (min_propulsion_battery_soc msg))
    (cl:cons ':mcu_battery_soc (mcu_battery_soc msg))
    (cl:cons ':mcu_battery_temp_degC (mcu_battery_temp_degC msg))
    (cl:cons ':mcu_inst_power_W (mcu_inst_power_W msg))
    (cl:cons ':mcu_total_energy_Wh (mcu_total_energy_Wh msg))
    (cl:cons ':motor_current_A0pk (motor_current_A0pk msg))
    (cl:cons ':max_motor_current_A0pk (max_motor_current_A0pk msg))
    (cl:cons ':motor_current_limit_A0pk (motor_current_limit_A0pk msg))
    (cl:cons ':min_motor_current_limit_A0pk (min_motor_current_limit_A0pk msg))
))
